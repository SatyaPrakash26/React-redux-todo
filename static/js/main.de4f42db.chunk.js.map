{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/Store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","resp","ok","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","title","todo","toggleCompleteAsync","id","completed","deleteTodoAsync","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","nanoid","push","toggleComplete","index","findIndex","deleteTodo","filter","extraReducers","fulfilled","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","e","preventDefault","className","type","placeholder","onChange","event","target","TodoItem","checked","onClick","console","log","TodoList","useSelector","useEffect","map","TotalCompleteItems","items","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","Store","document","getElementById"],"mappings":"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","file":"static/js/main.de4f42db.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n\t'todos/getTodosAsync',\r\n\tasync () => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos');\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todos = await resp.json();\r\n\t\t\treturn { todos };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const addTodoAsync = createAsyncThunk(\r\n\t'todos/addTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch('http://localhost:7000/todos', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ title: payload.title }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n\t'todos/completeTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ completed: payload.completed }),\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\tconst todo = await resp.json();\r\n\t\t\treturn { todo };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n\t'todos/deleteTodoAsync',\r\n\tasync (payload) => {\r\n\t\tconst resp = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t});\r\n\r\n\t\tif (resp.ok) {\r\n\t\t\treturn { id: payload.id };\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos',\r\n\tinitialState: [],\r\n\treducers: {\r\n\t\taddTodo: (state, action) => {\r\n\t\t\tconst todo = {\r\n\t\t\t\tid: nanoid(),\r\n\t\t\t\ttitle: action.payload.title,\r\n\t\t\t\tcompleted: false,\r\n\t\t\t};\r\n\t\t\tstate.push(todo);\r\n\t\t},\r\n\t\ttoggleComplete: (state, action) => {\r\n\t\t\tconst index = state.findIndex((todo) => todo.id === action.payload.id);\r\n\t\t\tstate[index].completed = action.payload.completed;\r\n\t\t},\r\n\t\tdeleteTodo: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[getTodosAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn action.payload.todos;\r\n\t\t},\r\n\t\t[addTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\tstate.push(action.payload.todo);\r\n\t\t},\r\n\t\t[toggleCompleteAsync.fulfilled]: (state, action) => {\r\n\t\t\tconst index = state.findIndex(\r\n\t\t\t\t(todo) => todo.id === action.payload.todo.id\r\n\t\t\t);\r\n\t\t\tstate[index].completed = action.payload.todo.completed;\r\n\t\t},\r\n\t\t[deleteTodoAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn state.filter((todo) => todo.id !== action.payload.id);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodoAsync } from '../redux/todoSlice';\n\nconst AddTodoForm = () => {\n\tconst [value, setValue] = useState('');\n\tconst dispatch = useDispatch();\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\taddTodoAsync({\n\t\t\t\ttitle:value,\n\t\t\t})\n\t\t)\n\t};\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\n\t\t\t<label className='sr-only'>Name</label>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='form-control mb-2 mr-sm-2'\n\t\t\t\tplaceholder='Add todo...'\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\t></input>\n\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default AddTodoForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleCompleteAsync,deleteTodoAsync } from '../redux/todoSlice';\nconst TodoItem = ({ id, title, completed }) => {\n\tconst dispatch = useDispatch();\t\n\tconst handleCompleteClick = ()=>{\n\t\tdispatch(toggleCompleteAsync({\n\t\t\tid:id,\n\t\t\tcompleted:!completed\n\t\t})\n\t\t)\n\t}\n\n\tconst handleDeleteClick = ()=>{\n\n\t\tdispatch(deleteTodoAsync({id}));\n\t\tconsole.log('button clicked',id)\n\t}\n\n\treturn (\n\t\t<li className={`list-group-item ${completed && 'list-group-item-success'}`}>\n\t\t\t<div className='d-flex justify-content-between'>\n\t\t\t\t<span className='d-flex align-items-center'>\n\t\t\t\t\t<input type='checkbox' className='mr-3' checked={completed} onChange={handleCompleteClick}></input>\n\t\t\t\t\t{title}\n\t\t\t\t</span>\n\t\t\t\t<button className='btn btn-danger' onClick={handleDeleteClick}>Delete</button>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default TodoItem;\n","import React, { useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector ,useDispatch} from 'react-redux';\nimport { getTodosAsync } from '../redux/todoSlice';\n\nconst TodoList = () => {\n\tconst todos = useSelector((state)=> state.todos);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(()=>{\n\t\tdispatch(getTodosAsync())\n\t},[dispatch])\n\treturn (\n\t\t<ul className='list-group'>\n\t\t\t{todos.map((todo) => (\n\t\t\t\t\n\t\t\t\t<TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst TotalCompleteItems = () => {\n\tconst items = useSelector((state)=> state.todos.filter((todo)=>todo.completed === true))\n\treturn <h4 className='mt-3'>Total Complete Items: {items.length}</h4>;\n};\n\nexport default TotalCompleteItems;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport TotalCompleteItems from './components/TotalCompleteItems';\n\nconst App = () => {\n\treturn (\n\t\t<div className='container bg-white p-4 mt-5'>\n\t\t\t<h1>My Todo List</h1>\n\t\t\t<AddTodoForm />\n\t\t\t<TodoList />\n\t\t\t<TotalCompleteItems />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        todos:todoReducer,\r\n    }\r\n})\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Store from './redux/Store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t<Provider store={Store}>\n\t\t<App />\n\t</Provider>\t\t\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}